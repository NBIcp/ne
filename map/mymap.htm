<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="百度地图,百度地图API，百度地图自定义工具，百度地图所见即所得工具" />
    <meta name="description" content="百度地图API自定义地图，帮助用户在可视化操作下生成百度地图" />
    <title>百度地图API自定义地图</title>
    <!--引用百度地图API-->
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=i5SIVv7FsAljLdvchgtYzuQm4qC4A3r9"></script>
    <style type="text/css">
      html,body{margin: 0;padding: 0;}
    </style>
  </head>

<body>
  <!--百度地图容器-->
  <div style="width:100%;height:500px;font-size:14px" id="map"></div>
</body>
<script type="text/javascript">
    //创建和初始化地图函数：
    function initMap(){
        createMap();//创建地图
        setMapEvent();//设置地图事件
        addMapControl();//向地图添加控件
        addMarker();//向地图中添加marker
		addMapStyle();
    }
    
    //创建地图函数：
    function createMap(){
        var map = new BMap.Map("dituContent");//在百度地图容器中创建一个地图
        var point = new BMap.Point(121.178746,30.053832);//定义一个中心点坐标
        map.centerAndZoom(point,14);//设定地图的中心点和坐标并将地图显示在地图容器中
        window.map = map;//将map变量存储在全局
    }
    
    //地图事件设置函数：
    function setMapEvent(){
        map.enableDragging();//启用地图拖拽事件，默认启用(可不写)
        map.enableScrollWheelZoom();//启用地图滚轮放大缩小
        map.enableDoubleClickZoom();//启用鼠标双击放大，默认启用(可不写)
        map.enableKeyboard();//启用键盘上下左右键移动地图
    }
    
    //地图控件添加函数：
    function addMapControl(){
        //向地图中添加缩放控件
	var ctrl_nav = new BMap.NavigationControl({anchor:BMAP_ANCHOR_TOP_LEFT,type:BMAP_NAVIGATION_CONTROL_SMALL});
	map.addControl(ctrl_nav);
        //向地图中添加缩略图控件
	var ctrl_ove = new BMap.OverviewMapControl({anchor:BMAP_ANCHOR_BOTTOM_RIGHT,isOpen:1});
	map.addControl(ctrl_ove);
        //向地图中添加比例尺控件
	var ctrl_sca = new BMap.ScaleControl({anchor:BMAP_ANCHOR_BOTTOM_LEFT});
	map.addControl(ctrl_sca);
    }
    
	//map style 
			function addMapStyle(){
			map.setMapStyle({
				styleJson:[
					{
						"featureType": "land",
						"elementType": "geometry",
						"stylers": {
							"color": "#212121"
						}
					},
					{
						"featureType": "building",
						"elementType": "geometry",
						"stylers": {
							"color": "#2b2b2b"
						}
					},
					{
						"featureType": "highway",
						"elementType": "all",
						"stylers": {
							"lightness": -42,
							"saturation": -91
						}
					},
					{
						"featureType": "arterial",
						"elementType": "geometry",
						"stylers": {
							"lightness": -77,
							"saturation": -94
						}
					},
					{
						"featureType": "green",
						"elementType": "geometry",
						"stylers": {
							"color": "#1b1b1b"
						}
					},
					{
						"featureType": "water",
						"elementType": "geometry",
						"stylers": {
							"color": "#181818"
						}
					},
					{
						"featureType": "subway",
						"elementType": "geometry.stroke",
						"stylers": {
							"color": "#181818"
						}
					},
					{
						"featureType": "railway",
						"elementType": "geometry",
						"stylers": {
							"lightness": -52
						}
					},
					{
						"featureType": "all",
						"elementType": "labels.text.stroke",
						"stylers": {
							"color": "#313131"
						}
					},
					{
						"featureType": "all",
						"elementType": "labels.text.fill",
						"stylers": {
							"color": "#8b8787"
						}
					},
					{
						"featureType": "manmade",
						"elementType": "geometry",
						"stylers": {
							"color": "#1b1b1b"
						}
					},
					{
						"featureType": "local",
						"elementType": "geometry",
						"stylers": {
							"lightness": -75,
							"saturation": -91
						}
					},
					{
						"featureType": "subway",
						"elementType": "geometry",
						"stylers": {
							"lightness": -65
						}
					},
					{
						"featureType": "railway",
						"elementType": "all",
						"stylers": {
							"lightness": -40
						}
					},
					{
						"featureType": "boundary",
						"elementType": "geometry",
						"stylers": {
							"color": "#000000",
							"hue": "#000000",
							"weight": "1",
							"lightness": -29,
							"saturation": 1
						}
					}
				]
			});
			}
			
    //标注点数组
    var markerArr = [{title:"余姚宾馆",content:"余姚宾馆",point:"121.15927|30.048205",isOpen:0,icon:{w:21,h:21,l:0,t:0,x:6,lb:5}}
		 ];
    //创建marker
    function addMarker(){
        for(var i=0;i<markerArr.length;i++){
            var json = markerArr[i];
            var p0 = json.point.split("|")[0];
            var p1 = json.point.split("|")[1];
            var point = new BMap.Point(p0,p1);
			var iconImg = createIcon(json.icon);
            var marker = new BMap.Marker(point,{icon:iconImg});
			var iw = createInfoWindow(i);
			var label = new BMap.Label(json.title,{"offset":new BMap.Size(json.icon.lb-json.icon.x+10,-20)});
			marker.setLabel(label);
            map.addOverlay(marker);
            label.setStyle({
                        borderColor:"#808080",
                        color:"#333",
                        cursor:"pointer"
            });
			
			(function(){
				var index = i;
				var _iw = createInfoWindow(i);
				var _marker = marker;
				_marker.addEventListener("click",function(){
				    this.openInfoWindow(_iw);
			    });
			    _iw.addEventListener("open",function(){
				    _marker.getLabel().hide();
			    })
			    _iw.addEventListener("close",function(){
				    _marker.getLabel().show();
			    })
				label.addEventListener("click",function(){
				    _marker.openInfoWindow(_iw);
			    })
				if(!!json.isOpen){
					label.hide();
					_marker.openInfoWindow(_iw);
				}
			})()
        }
    }
    //创建InfoWindow
    function createInfoWindow(i){
        var json = markerArr[i];
        var iw = new BMap.InfoWindow("<b class='iw_poi_title' title='" + json.title + "'>" + json.title + "</b><div class='iw_poi_content'>"+json.content+"</div>");
        return iw;
    }
    //创建一个Icon
    function createIcon(json){
        var icon = new BMap.Icon("http://app.baidu.com/map/images/us_mk_icon.png", new BMap.Size(json.w,json.h),{imageOffset: new BMap.Size(-json.l,-json.t),infoWindowOffset:new BMap.Size(json.lb+5,1),offset:new BMap.Size(json.x,json.h)})
        return icon;
    }
    
    initMap();//创建和初始化地图
</script>
</html>